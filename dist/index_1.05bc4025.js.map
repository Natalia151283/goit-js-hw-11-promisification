{"version":3,"sources":["index_1.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then"],"mappings":"AAAA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAAAC,EAAE,EAAI;AAGnB,SAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC1BC,IAAAA,UAAU,CAAC,YAAI;AACXD,MAAAA,OAAO,CAACF,EAAD,CAAP;AACH,KAFS,EAERA,EAFQ,CAAV;AAGH,GAJM,CAAP;AAKA,CARD;;AAUA,IAAMI,MAAM,GAAG,SAATA,MAAS,CAAAC,IAAI;AAAA,SAAIC,OAAO,CAACC,GAAR,0BAA8BF,IAA9B,QAAJ;AAAA,CAAnB;;AAGAN,KAAK,CAAC,IAAD,CAAL,CAAYS,IAAZ,CAAiBJ,MAAjB,GAA0B;;AAC1BL,KAAK,CAAC,IAAD,CAAL,CAAYS,IAAZ,CAAiBJ,MAAjB,GAA0B;;AAC1BL,KAAK,CAAC,IAAD,CAAL,CAAYS,IAAZ,CAAiBJ,MAAjB,GAA0B","file":"index_1.05bc4025.js","sourceRoot":"../src","sourcesContent":["const delay = ms => {\n\n\n return new Promise(resolve => {\n     setTimeout(()=>{\n         resolve(ms);\n     },ms)\n })\n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms"]}