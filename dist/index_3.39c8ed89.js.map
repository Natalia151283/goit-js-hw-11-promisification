{"version":3,"sources":["index_3.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","delay","Promise","resolve","reject","setTimeout","canProcess","id","logSuccess","time","console","log","logError","warn","amount","then","catch"],"mappings":";;;;;;;;;;;;AACA,IAAMA,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC5C,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACD,CAFH;;AAIE,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACC,WAAD,EAAiB;AAEvC,MAAMC,KAAK,GAAGR,yBAAyB,CAAC,GAAD,EAAM,GAAN,CAAvC;AACA,SAAO,IAAIS,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AAEnCC,IAAAA,UAAU,CAAC,YAAM;AACb,UAAMC,UAAU,GAAGV,IAAI,CAACE,MAAL,KAAgB,GAAnC;;AAEA,UAAIQ,UAAJ,EAAgB;AAEZH,QAAAA,OAAO,CAAC,CAACH,WAAW,CAACO,EAAb,EAAiBN,KAAjB,CAAD,CAAP;AACH;;AACGG,MAAAA,MAAM,CAACJ,WAAW,CAACO,EAAb,CAAN;AAEL,KATO,EASLN,KATK,CAAV;AAUH,GAZM,CAAP;AAeD,CAlBD;;AAoBA,IAAMO,UAAU,GAAG,SAAbA,UAAa,OAAgB;AAAA;AAAA,MAAdD,EAAc;AAAA,MAAVE,IAAU;;AACjCC,EAAAA,OAAO,CAACC,GAAR,uBAA2BJ,EAA3B,2BAA8CE,IAA9C;AACD,CAFD;;AAIA,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAAAL,EAAE,EAAI;AACrBG,EAAAA,OAAO,CAACG,IAAR,wCAA6CN,EAA7C;AACD,CAFD;;AAIAR,eAAe,CAAC;AAAEQ,EAAAA,EAAE,EAAE,EAAN;AAAUO,EAAAA,MAAM,EAAE;AAAlB,CAAD,CAAf,CACGC,IADH,CACQP,UADR,EAEGQ,KAFH,CAESJ,QAFT;AAIAb,eAAe,CAAC;AAAEQ,EAAAA,EAAE,EAAE,EAAN;AAAUO,EAAAA,MAAM,EAAE;AAAlB,CAAD,CAAf,CACGC,IADH,CACQP,UADR,EAEGQ,KAFH,CAESJ,QAFT;AAIAb,eAAe,CAAC;AAAEQ,EAAAA,EAAE,EAAE,EAAN;AAAUO,EAAAA,MAAM,EAAE;AAAlB,CAAD,CAAf,CACGC,IADH,CACQP,UADR,EAEGQ,KAFH,CAESJ,QAFT;AAIAb,eAAe,CAAC;AAAEQ,EAAAA,EAAE,EAAE,EAAN;AAAUO,EAAAA,MAAM,EAAE;AAAlB,CAAD,CAAf,CACGC,IADH,CACQP,UADR,EAEGQ,KAFH,CAESJ,QAFT","file":"index_3.39c8ed89.js","sourceRoot":"../src","sourcesContent":["\nconst randomIntegerFromInterval = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n \n  const makeTransaction = (transaction) => {\n    \n    const delay = randomIntegerFromInterval(200, 500);\n    return new Promise((resolve, reject) =>{\n    \n        setTimeout(() => {\n            const canProcess = Math.random() > 0.3;\n           \n            if (canProcess) {\n               \n                resolve([transaction.id, delay]);\n            }  \n                reject(transaction.id);\n            \n          }, delay);\n    });\n     \n \n  };\n\n  const logSuccess = ([id, time]) => {\n    console.log(`Transaction ${id} processed in ${time}ms`);\n  };\n  \n  const logError = id => {\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\n  };\n\n  makeTransaction({ id: 70, amount: 150 })\n    .then(logSuccess)\n    .catch(logError);\n  \n  makeTransaction({ id: 71, amount: 230 })\n    .then(logSuccess)\n    .catch(logError);\n  \n  makeTransaction({ id: 72, amount: 75 })\n    .then(logSuccess)\n    .catch(logError);\n  \n  makeTransaction({ id: 73, amount: 100 })\n    .then(logSuccess)\n    .catch(logError);"]}